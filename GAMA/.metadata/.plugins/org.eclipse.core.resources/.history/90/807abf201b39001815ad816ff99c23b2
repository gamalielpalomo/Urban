/**
 *  crowds
 *  Author: gamaa
 *  Description: Model for social interactions in a city
 */

model crowds

/* Insert your model definition here */

global torus:false{
	
	int sumEncounters;
	int peopleInEncounter <- 0 update: people count (each.interacting); // this is the people interacting
	int acumEncounters;
	int meanEncounters;
	int timeStep;
	float worldDimension <- 1000#m;
	float distanceForInteraction;
	graph road_network;
	bool connectedGraph;
	
	
	geometry shape <- square(worldDimension);
	//geometry shape <- envelope(streets_shp);
	
	reflex mainLoop{
		if time >= 1000{do pause;}
	}
	
	init{
		distanceForInteraction <- 30#m;
		create people number:1000{
			point initialLocation <- {(0+rnd(worldDimension)),0+rnd(worldDimension)};
			location <- any_location_in(initialLocation) ;
		} 
	}
	
}



species people skills:[moving]{
	bool interacting;
	float speed;
	point target;
	
	init{
		interacting <- false;
	}
	
	reflex timeStep{
		ask people at_distance(distanceForInteraction){
			draw polyline([self.location, myself.location]) color:#black;
			myself.interacting <- true;
			self.interacting <- true;
		}
	}
	
	aspect name:standard_aspect{
		draw geometry:circle(10#m) color:#blue;					
	}
		
}

experiment simulation type:gui{
	output{
		display chart {
			chart "Encounters" type:series{
				data "encounters" value:peopleInteracting color:#red;
				//data "mean" value:meanEncounters color: #blue;
			}
		}
		monitor "number of encounters" value:sumEncounters;
		display display1{
			species people aspect:standard_aspect;
			//species targets aspect:targets_aspect;
		}
	}
}